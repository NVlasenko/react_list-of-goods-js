{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","_useState","useState","_useState2","_slicedToArray","sortField","setSortField","_useState3","_useState4","isSorted","setIsSorted","visibleGoods","goods","_ref","preparedGoods","_toConsumableArray","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","_jsxs","className","children","_jsx","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,IAAAC,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAAgCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,EA5BR,SAA0BC,EAAKC,GAA4B,IAAxBR,EAASQ,EAATR,UAAWI,EAAQI,EAARJ,SACtCK,EAAaC,YAAOH,GAqB1B,OAnBIP,GACFS,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQb,GACN,KAAKP,EACH,OAAOmB,EAAME,cAAcD,GAE7B,KAAKnB,EACH,OAAOkB,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXX,GACFK,EAAcO,UAGTP,EAMcQ,CAAiBzB,EACpC,CAAEQ,YAAWI,aAWf,OAEEc,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,SAAU,UACtB,CAAE,WAAYvB,IAAcP,IAC9B+B,QAAS,WACPvB,EAAaR,IACb2B,SACH,wBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,SAAU,aACtB,CAAE,WAAYvB,IAAcN,IAC9B8B,QAAS,WACPvB,EAAaP,IACb0B,SACH,mBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,SAAU,aACtB,CAAE,YAAanB,IACjBoB,QAlCW,WACjBnB,GAAaD,IAiCagB,SACrB,YAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,SAAU,YAAa,WACnC,CAAE,aAAcvB,IAClBwB,QAhDU,WAChBvB,EAAa,IACbI,GAAY,IA8Cae,SACpB,aAKFd,EAAamB,KAAI,SAAAC,GAAI,OACpBL,cAAA,MAAAD,SACEC,cAAA,MAAI,UAAQ,OAAMD,SAAEM,KADbA,UCxGjBC,IAASC,OACPP,cAAC1B,EAAG,IACJkC,SAASC,eAAe,W","file":"static/js/main.f5c74cff.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, isSorted }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isSorted) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isSorted, setIsSorted] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField, isSorted });\n\n  const resetFunc = () => {\n    setSortField('');\n    setIsSorted(false);\n  };\n\n  const toggleSort = () => {\n    setIsSorted(!isSorted);\n  };\n\n  return (\n\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET })}\n          onClick={() => {\n            setSortField(SORT_FIELD_ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH })}\n          onClick={() => {\n            setSortField(SORT_FIELD_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': !isSorted })}\n          onClick={toggleSort}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-danger', 'is-light',\n            { 'is-hidden': !sortField })}\n          onClick={resetFunc}\n        >\n          Reset\n        </button>\n      </div>\n\n      {visibleGoods.map(good => (\n        <ul key={good}>\n          <li data-cy=\"Good\">{good}</li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}